@import './var.less';

:root {
  --zhp-button-mini-height: @button-mini-height;
  --zhp-button-mini-padding: @button-mini-padding;
  --zhp-button-mini-font-size: @button-mini-font-size;
  --zhp-button-small-height: @button-small-height;
  --zhp-button-small-padding: @button-small-padding;
  --zhp-button-small-font-size: @button-small-font-size;
  --zhp-button-normal-padding: @button-normal-padding;
  --zhp-button-normal-font-size: @button-normal-font-size;
  --zhp-button-large-height: @button-large-height;
  --zhp-button-default-height: @button-default-height;
  --zhp-button-default-line-height: @button-default-line-height;
  --zhp-button-default-font-size: @button-default-font-size;
  --zhp-button-default-color: @button-default-color;
  --zhp-button-default-background-color: @button-default-background-color;
  --zhp-button-default-border-color: @button-default-border-color;
  --zhp-button-primary-color: @button-primary-color;
  --zhp-button-primary-background-color: @button-primary-background-color;
  --zhp-button-primary-border-color: @button-primary-border-color;
  --zhp-button-success-color: @button-success-color;
  --zhp-button-success-background-color: @button-success-background-color;
  --zhp-button-success-border-color: @button-success-border-color;
  --zhp-button-danger-color: @button-danger-color;
  --zhp-button-danger-background-color: @button-danger-background-color;
  --zhp-button-danger-border-color: @button-danger-border-color;
  --zhp-button-warning-color: @button-warning-color;
  --zhp-button-warning-background-color: @button-warning-background-color;
  --zhp-button-warning-border-color: @button-warning-border-color;
  --zhp-button-border-width: @button-border-width;
  --zhp-button-border-radius: @button-border-radius;
  --zhp-button-round-border-radius: @button-round-border-radius;
  --zhp-button-disabled-opacity: @button-disabled-opacity;
  --zhp-button-icon-size: @button-icon-size;
  --zhp-button-loading-icon-size: @button-loading-icon-size;
}

.zhp-button {
  position: relative;
  display: inline-block;
  box-sizing: border-box;
  height: var(--zhp-button-default-height);
  margin: 0;
  padding: 0;
  font-size: var(--zhp-button-default-font-size);
  line-height: var(--zhp-button-default-line-height);
  text-align: center;
  border-radius: var(--zhp-button-border-radius);
  cursor: pointer;
  transition: opacity var(--zhp-animation-duration-fast);
  -webkit-appearance: none;

  &::before {
    position: absolute;
    top: 50%;
    left: 50%;
    width: 100%;
    height: 100%;
    background-color: var(--zhp-black);
    border: inherit;
    border-color: var(--zhp-black);
    border-radius: inherit; /* inherit parent's border radius */
    transform: translate(-50%, -50%);
    opacity: 0;
    content: ' ';
  }

  &:active::before {
    opacity: 0.1;
  }

  &--loading,
  &--disabled {
    &::before {
      display: none;
    }
  }

  &--default {
    color: var(--zhp-button-default-color);
    background-color: var(--zhp-button-default-background-color);
    border: var(--zhp-button-border-width) solid var(--zhp-button-default-border-color);
    .zhp-loading__spinner {
      stroke: var(--zhp-button-default-color);
    }
  }

  &--primary {
    color: var(--zhp-button-primary-color);
    background-color: var(--zhp-button-primary-background-color);
    border: var(--zhp-button-border-width) solid var(--zhp-button-primary-border-color);
  }

  &--danger {
    color: var(--zhp-button-danger-color);
    background-color: var(--zhp-button-danger-background-color);
    border: var(--zhp-button-border-width) solid var(--zhp-button-danger-border-color);

    .zhp-loading__spinner {
      stroke: var(--zhp-button-danger-color);
    }
  }

  &--ghost {
    color: @white;
    background-color: transparent;
    border-color: @white;

    &.zhp-button--primary {
      color: var(--zhp-button-primary-background-color);
      border-color: var(--zhp-button-primary-background-color);

      .zhp-loading__spinner {
        stroke: var(--zhp-button-primary-background-color) !important;
      }
    }
    &.zhp-button--danger {
      color: var(--zhp-button-danger-background-color);
      border-color: var(--zhp-button-danger-background-color);
      .zhp-loading__spinner {
        stroke: var(--zhp-button-danger-background-color) !important;
      }
    }
  }

  &--large {
    width: 100%;
    height: var(--zhp-button-large-height);
  }

  &--normal {
    padding: var(--zhp-button-normal-padding);
    font-size: var(--zhp-button-normal-font-size);
  }

  &--small {
    height: var(--zhp-button-small-height);
    padding: var(--zhp-button-small-padding);
    font-size: var(--zhp-button-small-font-size);
  }

  &__loading {
    color: inherit;
    font-size: inherit;

    .zhp-loading__spinner {
      width: var(--zhp-button-loading-icon-size);
      height: var(--zhp-button-loading-icon-size);
      color: currentColor;
    }
  }

  &--mini {
    height: var(--zhp-button-mini-height);
    padding: var(--zhp-button-mini-padding);
    font-size: var(--zhp-button-mini-font-size);

    & + .zhp-button--mini {
      margin-left: var(--zhp-padding-base);
    }
  }

  &--block {
    display: block;
    width: 100%;
  }

  &--disabled {
    cursor: not-allowed;
    opacity: var(--zhp-button-disabled-opacity);
  }

  &--loading {
    cursor: default;
  }

  &--round {
    border-radius: var(--zhp-button-round-border-radius);
  }

  &--square {
    border-radius: 0;
  }

  // align-items are ignored when flex container is a button in legacy safari
  // see: https://bugs.webkit.org/show_bug.cgi?id=169700
  &__content {
    display: flex;
    align-items: center;
    justify-content: center;
    height: 100%;

    // fix icon vertical align
    // see: https://github.com/youzan/vant/issues/7617
    &::before {
      content: ' ';
    }
  }

  &__icon {
    width: auto;
    height: 60%;
    font-size: var(--zhp-button-icon-size);
    line-height: inherit;
  }

  &__icon + &__text,
  &__loading + &__text,
  &__text + &__icon,
  &__text + &__loading {
    margin-left: var(--zhp-padding-base);
  }

  &--hairline {
    border-width: 0;

    &::after {
      border-color: inherit;
      border-radius: calc(var(--zhp-button-border-radius) * 2);
    }

    &.zhp-button--round::after {
      border-radius: var(--zhp-button-round-border-radius);
    }

    &.zhp-button--square::after {
      border-radius: 0;
    }
  }
}
